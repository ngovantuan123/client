/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package client;

import client.entity.MonHoc;
import com.google.gson.Gson;
import java.awt.Color;
import java.awt.event.FocusEvent;
import java.awt.event.FocusListener;
import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.IOException;
import java.net.Socket;
import java.util.ArrayList;
import java.util.List;
import javax.swing.table.DefaultTableModel;
import org.json.JSONArray;
import org.json.JSONObject;
import org.modelmapper.ModelMapper;

/**
 *
 * @author tuangh
 */
public final class ChonMonHoc extends javax.swing.JFrame implements Runnable{

    private Socket socket;
    private BufferedWriter out;
    private BufferedReader in;
    /**
     * Creates new form ChonMonHoc
     * @param socket
     * @param bufferedReader
     * @param bufferedWriter
     */
    public void send(String data) throws IOException {
        out.write(data+'\n');
        out.flush();
    }
    private String receive() throws IOException {
        String input = in.readLine();
        if (input == null)
            return "";

        return input; // giai ma hoa
    }
    public List<List<tkb>> convertJsonToArray(String jsonString){
        JSONArray jsonArray= new JSONArray(jsonString);
        List<List<tkb>> result = new ArrayList<>();
        for (int i = 0; i < jsonArray.length(); i++) {
            JSONArray temp = (JSONArray) jsonArray.get(i);
            List<tkb> tkbs = new ArrayList<>();
            for(int j =0;j<temp.length();j++){

                tkb tkb = new Gson().fromJson(temp.get(j).toString(), tkb.class);
                tkbs.add(tkb);
            }
            result.add(tkbs);
        }
        return result;
    }
    public ChonMonHoc(Socket socket,BufferedReader bufferedReader,BufferedWriter bufferedWriter) {
        this.socket=socket;
        this.out = bufferedWriter;
        this.in =bufferedReader;
        
        initComponents();
        //load data to table
        
    }
    public ChonMonHoc (){
        initComponents();
    }
    public void loaddatatableMonHoc(JSONArray array){
        //tblmonhoc.setModel(new DefaultTableModel());
        DefaultTableModel defaultTableModel = (DefaultTableModel)tblmonhoc.getModel();
        defaultTableModel.setRowCount(0);
        for (int i=0; i < array.length(); i++) {
            JSONObject mh = (JSONObject) array.get(i);
            Object obj[]={"",mh.get("maMH"),mh.get("tenMonHoc"),"",""};
            defaultTableModel.addRow(obj);
        }
        tblmonhoc.setModel(defaultTableModel);        
    }
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        cbckhoa = new javax.swing.JComboBox<>();
        jButton1 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblmonhoc = new javax.swing.JTable();
        jTextField1 = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Chọn khoa"));

        cbckhoa.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "CT-CNTT", "DV-Điện tử viễn  thông", "GM-Mầm non", "GT-Giáo dục tiểu học", "KT-Sư phạm kĩ thuật", "LC-Giáo dục chính trị", "LU-Luật", "MI-Nghệ thuật", "MO-Khoa học môi trường", "NN-Ngoại ngữ", "NT-Nghệ thuật", "QD-Quản trị kinh doanh", "QG-Giáo dục", "QP-An ninh quốc phòng", "TD-Toán ứng dụng", "TE-Tài chính kế toán", "TN-Sư phạm khoa học tự nhiên", "TT-Thư viện văn phòng", "VD-Quan hệ quốc tế", "XH-Sư phạm Khoa học xã hội" }));
        cbckhoa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbckhoaActionPerformed(evt);
            }
        });

        jButton1.setText("Xem");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(114, 114, 114)
                .addComponent(cbckhoa, javax.swing.GroupLayout.PREFERRED_SIZE, 221, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jButton1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cbckhoa, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton1))
                .addContainerGap(10, Short.MAX_VALUE))
        );

        tblmonhoc.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "", "Mã môn học", "Tên môn học ", "Số tín chỉ", "Chi tiết"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tblmonhoc);
        if (tblmonhoc.getColumnModel().getColumnCount() > 0) {
            tblmonhoc.getColumnModel().getColumn(0).setResizable(false);
            tblmonhoc.getColumnModel().getColumn(1).setResizable(false);
            tblmonhoc.getColumnModel().getColumn(2).setResizable(false);
            tblmonhoc.getColumnModel().getColumn(3).setResizable(false);
            tblmonhoc.getColumnModel().getColumn(4).setResizable(false);
        }

        jTextField1.setText("Search...");
        jTextField1.setForeground(Color.GRAY);
        jTextField1.addFocusListener(new FocusListener() {
            @Override
            public void focusGained(FocusEvent e) {
                if (jTextField1.getText().equals("Search...")) {
                    jTextField1.setText("");
                    jTextField1.setForeground(Color.BLACK);
                }
            }
            @Override
            public void focusLost(FocusEvent e) {
                if (jTextField1.getText().isEmpty()) {
                    jTextField1.setForeground(Color.GRAY);
                    jTextField1.setText("Search...");
                }
            }
        });
        jTextField1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 660, Short.MAX_VALUE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 185, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(38, 38, 38))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(27, 27, 27))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void cbckhoaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbckhoaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cbckhoaActionPerformed

    private void jTextField1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField1ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        try {
            String[] listMK = ((String[])cbckhoa.getSelectedItem());
           String makhoa=listMK[0];
            //send("841403;841315;841304;841067");
            send("hello");
            String input="";
            while (true){
                input = receive();
                if (input.isEmpty()){
                    continue;
                }
                else{

                    JSONArray jSONArray=  new JSONArray(input);
                    loaddatatableMonHoc(jSONArray);


                }

                System.out.println("[Server] "+input);
                break;
            }


        } catch (IOException e) {
            e.printStackTrace();
        }
        
    }//GEN-LAST:event_jButton1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ChonMonHoc.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ChonMonHoc.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ChonMonHoc.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ChonMonHoc.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ChonMonHoc().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> cbckhoa;
    private javax.swing.JButton jButton1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTable tblmonhoc;
    // End of variables declaration//GEN-END:variables

    @Override
    public void run() {

        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ChonMonHoc().setVisible(true);
            }
        });
    }
}
